"grammar_scope.ml" 8 201 205 "grammar_scope.ml" 8 201 215
type(
  bool ref
)
ident(
  def strip_nums "grammar_scope.ml" 10 229 229 --
)
"grammar_scope.ml" 8 201 218 "grammar_scope.ml" 8 201 221
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"grammar_scope.ml" 8 201 222 "grammar_scope.ml" 8 201 227
type(
  bool
)
"grammar_scope.ml" 8 201 218 "grammar_scope.ml" 8 201 227
type(
  bool ref
)
"grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
type(
  string -> string
)
ident(
  def stripnum "grammar_scope.ml" 18 381 381 --
)
"grammar_scope.ml" 11 244 250 "grammar_scope.ml" 11 244 259
type(
  string -> string
)
"grammar_scope.ml" 11 244 262 "grammar_scope.ml" 11 244 279
type(
  Str.regexp -> string -> string -> string
)
ident(
  ext_ref Str.replace_first
)
"grammar_scope.ml" 11 244 281 "grammar_scope.ml" 11 244 291
type(
  string -> Str.regexp
)
ident(
  ext_ref Str.regexp
)
"grammar_scope.ml" 11 244 292 "grammar_scope.ml" 11 244 302
type(
  string
)
"grammar_scope.ml" 11 244 280 "grammar_scope.ml" 11 244 303
call(
  stack
)
type(
  Str.regexp
)
"grammar_scope.ml" 11 244 304 "grammar_scope.ml" 11 244 306
type(
  string
)
"grammar_scope.ml" 11 244 262 "grammar_scope.ml" 11 244 306
call(
  stack
)
type(
  string -> string
)
"grammar_scope.ml" 12 310 316 "grammar_scope.ml" 12 310 317
type(
  string
)
ident(
  def x "grammar_scope.ml" 13 321 325 "grammar_scope.ml" 16 372 379
)
"grammar_scope.ml" 13 321 328 "grammar_scope.ml" 13 321 329
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"grammar_scope.ml" 13 321 329 "grammar_scope.ml" 13 321 339
type(
  bool ref
)
ident(
  int_ref strip_nums "grammar_scope.ml" 8 201 205 "grammar_scope.ml" 8 201 215
)
"grammar_scope.ml" 13 321 328 "grammar_scope.ml" 13 321 339
type(
  bool
)
"grammar_scope.ml" 14 345 351 "grammar_scope.ml" 14 345 360
type(
  string -> string
)
ident(
  int_ref stripnum1 "grammar_scope.ml" 11 244 250 "grammar_scope.ml" 11 244 259
)
"grammar_scope.ml" 14 345 361 "grammar_scope.ml" 14 345 362
type(
  string
)
ident(
  int_ref x "grammar_scope.ml" 12 310 316 "grammar_scope.ml" 12 310 317
)
"grammar_scope.ml" 14 345 351 "grammar_scope.ml" 14 345 362
call(
  tail
)
type(
  string
)
"grammar_scope.ml" 16 372 378 "grammar_scope.ml" 16 372 379
type(
  string
)
ident(
  int_ref x "grammar_scope.ml" 12 310 316 "grammar_scope.ml" 12 310 317
)
"grammar_scope.ml" 13 321 325 "grammar_scope.ml" 16 372 379
type(
  string
)
"grammar_scope.ml" 12 310 312 "grammar_scope.ml" 16 372 379
type(
  string -> string
)
"grammar_scope.ml" 11 244 246 "grammar_scope.ml" 16 372 379
type(
  string -> string
)
"grammar_scope.ml" 18 381 385 "grammar_scope.ml" 18 381 388
type(
  string -> 'a
)
ident(
  def err "grammar_scope.ml" 23 473 473 --
)
"grammar_scope.ml" 18 381 389 "grammar_scope.ml" 18 381 390
type(
  string
)
ident(
  def s "grammar_scope.ml" 19 393 395 "grammar_scope.ml" 20 412 437
)
"grammar_scope.ml" 19 393 395 "grammar_scope.ml" 19 393 408
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_endline
)
"grammar_scope.ml" 19 393 409 "grammar_scope.ml" 19 393 410
type(
  string
)
ident(
  int_ref s "grammar_scope.ml" 18 381 389 "grammar_scope.ml" 18 381 390
)
"grammar_scope.ml" 19 393 395 "grammar_scope.ml" 19 393 410
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 20 412 414 "grammar_scope.ml" 20 412 422
type(
  string -> 'a
)
ident(
  ext_ref Pervasives.failwith
)
"grammar_scope.ml" 20 412 424 "grammar_scope.ml" 20 412 434
type(
  string
)
"grammar_scope.ml" 20 412 434 "grammar_scope.ml" 20 412 435
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 20 412 435 "grammar_scope.ml" 20 412 436
type(
  string
)
ident(
  int_ref s "grammar_scope.ml" 18 381 389 "grammar_scope.ml" 18 381 390
)
"grammar_scope.ml" 20 412 423 "grammar_scope.ml" 20 412 437
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 20 412 414 "grammar_scope.ml" 20 412 437
call(
  tail
)
type(
  'a
)
"grammar_scope.ml" 19 393 395 "grammar_scope.ml" 20 412 437
type(
  'a
)
"grammar_scope.ml" 26 550 556 "grammar_scope.ml" 26 550 562
type(
  Var.t list -> (string, Var.t) Hashtbl.t * 'a Stack.t
)
ident(
  def create "grammar_scope.ml" 31 693 695 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 26 550 563 "grammar_scope.ml" 26 550 568
type(
  Var.t list
)
ident(
  def decls "grammar_scope.ml" 27 571 575 "grammar_scope.ml" 29 667 691
)
"grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
type(
  (string, Var.t) Hashtbl.t
)
"grammar_scope.ml" 27 571 583 "grammar_scope.ml" 27 571 597
type(
  int -> (string, Var.t) Hashtbl.t
)
ident(
  ext_ref Hashtbl.create
)
"grammar_scope.ml" 27 571 598 "grammar_scope.ml" 27 571 602
type(
  int
)
"grammar_scope.ml" 27 571 583 "grammar_scope.ml" 27 571 602
call(
  stack
)
type(
  (string, Var.t) Hashtbl.t
)
"grammar_scope.ml" 28 606 610 "grammar_scope.ml" 28 606 619
type(
  (Var.t -> unit) -> Var.t list -> unit
)
ident(
  ext_ref List.iter
)
"grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
type(
  Var.t
)
ident(
  def v "grammar_scope.ml" 28 606 630 "grammar_scope.ml" 28 606 658
)
"grammar_scope.ml" 28 606 630 "grammar_scope.ml" 28 606 641
type(
  (string, Var.t) Hashtbl.t -> string -> Var.t -> unit
)
ident(
  ext_ref Hashtbl.add
)
"grammar_scope.ml" 28 606 642 "grammar_scope.ml" 28 606 643
type(
  (string, Var.t) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
)
"grammar_scope.ml" 28 606 645 "grammar_scope.ml" 28 606 653
type(
  Var.t -> string
)
ident(
  ext_ref Var.name
)
"grammar_scope.ml" 28 606 654 "grammar_scope.ml" 28 606 655
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
)
"grammar_scope.ml" 28 606 644 "grammar_scope.ml" 28 606 656
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 28 606 657 "grammar_scope.ml" 28 606 658
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 28 606 625 "grammar_scope.ml" 28 606 626
)
"grammar_scope.ml" 28 606 630 "grammar_scope.ml" 28 606 658
call(
  tail
)
type(
  unit
)
"grammar_scope.ml" 28 606 620 "grammar_scope.ml" 28 606 659
type(
  Var.t -> unit
)
"grammar_scope.ml" 28 606 660 "grammar_scope.ml" 28 606 665
type(
  Var.t list
)
ident(
  int_ref decls "grammar_scope.ml" 26 550 563 "grammar_scope.ml" 26 550 568
)
"grammar_scope.ml" 28 606 610 "grammar_scope.ml" 28 606 665
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 29 667 672 "grammar_scope.ml" 29 667 673
type(
  (string, Var.t) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 27 571 579 "grammar_scope.ml" 27 571 580
)
"grammar_scope.ml" 29 667 675 "grammar_scope.ml" 29 667 687
type(
  unit -> 'a Stack.t
)
ident(
  ext_ref Stack.create
)
"grammar_scope.ml" 29 667 687 "grammar_scope.ml" 29 667 689
type(
  unit
)
"grammar_scope.ml" 29 667 675 "grammar_scope.ml" 29 667 689
call(
  stack
)
type(
  'a Stack.t
)
"grammar_scope.ml" 29 667 671 "grammar_scope.ml" 29 667 691
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
"grammar_scope.ml" 28 606 610 "grammar_scope.ml" 29 667 691
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
"grammar_scope.ml" 27 571 575 "grammar_scope.ml" 29 667 691
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
"grammar_scope.ml" 31 693 699 "grammar_scope.ml" 31 693 710
type(
  unit -> t
)
ident(
  def empty_scope "grammar_scope.ml" 33 731 733 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 31 693 711 "grammar_scope.ml" 31 693 713
type(
  unit
)
"grammar_scope.ml" 31 693 720 "grammar_scope.ml" 31 693 726
type(
  Var.t list -> t
)
ident(
  int_ref create "grammar_scope.ml" 26 550 556 "grammar_scope.ml" 26 550 562
)
"grammar_scope.ml" 31 693 727 "grammar_scope.ml" 31 693 729
type(
  Var.t list
)
"grammar_scope.ml" 31 693 720 "grammar_scope.ml" 31 693 729
call(
  tail
)
type(
  t
)
type(
  t
)
"grammar_scope.ml" 33 731 737 "grammar_scope.ml" 33 731 744
type(
  ('b, 'c) Hashtbl.t * 'd -> 'b -> 'c -> 'c
)
ident(
  def add_var "grammar_scope.ml" 37 797 799 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 33 731 745 "grammar_scope.ml" 33 731 750
type(
  ('b, 'c) Hashtbl.t * 'd
)
ident(
  def scope "grammar_scope.ml" 33 731 751 "grammar_scope.ml" 35 790 795
)
"grammar_scope.ml" 33 731 751 "grammar_scope.ml" 33 731 752
type(
  'b
)
ident(
  def n "grammar_scope.ml" 33 731 753 "grammar_scope.ml" 35 790 795
)
"grammar_scope.ml" 33 731 753 "grammar_scope.ml" 33 731 754
type(
  'c
)
ident(
  def v "grammar_scope.ml" 34 757 761 "grammar_scope.ml" 35 790 795
)
"grammar_scope.ml" 34 757 761 "grammar_scope.ml" 34 757 772
type(
  ('b, 'c) Hashtbl.t -> 'b -> 'c -> unit
)
ident(
  ext_ref Hashtbl.add
)
"grammar_scope.ml" 34 757 774 "grammar_scope.ml" 34 757 777
type(
  ('b, 'c) Hashtbl.t * 'd -> ('b, 'c) Hashtbl.t
)
ident(
  ext_ref Pervasives.fst
)
"grammar_scope.ml" 34 757 778 "grammar_scope.ml" 34 757 783
type(
  ('b, 'c) Hashtbl.t * 'd
)
ident(
  int_ref scope "grammar_scope.ml" 33 731 745 "grammar_scope.ml" 33 731 750
)
"grammar_scope.ml" 34 757 773 "grammar_scope.ml" 34 757 784
type(
  ('b, 'c) Hashtbl.t
)
"grammar_scope.ml" 34 757 785 "grammar_scope.ml" 34 757 786
type(
  'b
)
ident(
  int_ref n "grammar_scope.ml" 33 731 751 "grammar_scope.ml" 33 731 752
)
"grammar_scope.ml" 34 757 787 "grammar_scope.ml" 34 757 788
type(
  'c
)
ident(
  int_ref v "grammar_scope.ml" 33 731 753 "grammar_scope.ml" 33 731 754
)
"grammar_scope.ml" 34 757 761 "grammar_scope.ml" 34 757 788
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 35 790 794 "grammar_scope.ml" 35 790 795
type(
  'c
)
ident(
  int_ref v "grammar_scope.ml" 33 731 753 "grammar_scope.ml" 33 731 754
)
"grammar_scope.ml" 34 757 761 "grammar_scope.ml" 35 790 795
type(
  'c
)
"grammar_scope.ml" 37 797 803 "grammar_scope.ml" 37 797 806
type(
  (string, Var.t) Hashtbl.t * 'e -> string -> Type.typ -> Var.t
)
ident(
  def add "grammar_scope.ml" 41 883 885 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 37 797 807 "grammar_scope.ml" 37 797 812
type(
  (string, Var.t) Hashtbl.t * 'e
)
ident(
  def scope "grammar_scope.ml" 37 797 813 "grammar_scope.ml" 39 860 881
)
"grammar_scope.ml" 37 797 813 "grammar_scope.ml" 37 797 814
type(
  string
)
ident(
  def n "grammar_scope.ml" 37 797 815 "grammar_scope.ml" 39 860 881
)
"grammar_scope.ml" 37 797 815 "grammar_scope.ml" 37 797 816
type(
  Type.typ
)
ident(
  def t "grammar_scope.ml" 38 819 823 "grammar_scope.ml" 39 860 881
)
"grammar_scope.ml" 38 819 827 "grammar_scope.ml" 38 819 828
type(
  Var.t
)
"grammar_scope.ml" 38 819 831 "grammar_scope.ml" 38 819 841
type(
  string -> Type.typ -> Var.t
)
ident(
  ext_ref Var.newvar
)
"grammar_scope.ml" 38 819 843 "grammar_scope.ml" 38 819 851
type(
  string -> string
)
ident(
  int_ref stripnum "grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
)
"grammar_scope.ml" 38 819 852 "grammar_scope.ml" 38 819 853
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 37 797 813 "grammar_scope.ml" 37 797 814
)
"grammar_scope.ml" 38 819 842 "grammar_scope.ml" 38 819 854
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 38 819 855 "grammar_scope.ml" 38 819 856
type(
  Type.typ
)
ident(
  int_ref t "grammar_scope.ml" 37 797 815 "grammar_scope.ml" 37 797 816
)
"grammar_scope.ml" 38 819 831 "grammar_scope.ml" 38 819 856
call(
  stack
)
type(
  Var.t
)
"grammar_scope.ml" 39 860 864 "grammar_scope.ml" 39 860 871
type(
  (string, Var.t) Hashtbl.t * 'e -> string -> Var.t -> Var.t
)
ident(
  int_ref add_var "grammar_scope.ml" 33 731 737 "grammar_scope.ml" 33 731 744
)
"grammar_scope.ml" 39 860 872 "grammar_scope.ml" 39 860 877
type(
  (string, Var.t) Hashtbl.t * 'e
)
ident(
  int_ref scope "grammar_scope.ml" 37 797 807 "grammar_scope.ml" 37 797 812
)
"grammar_scope.ml" 39 860 878 "grammar_scope.ml" 39 860 879
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 37 797 813 "grammar_scope.ml" 37 797 814
)
"grammar_scope.ml" 39 860 880 "grammar_scope.ml" 39 860 881
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 38 819 827 "grammar_scope.ml" 38 819 828
)
"grammar_scope.ml" 39 860 864 "grammar_scope.ml" 39 860 881
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 38 819 823 "grammar_scope.ml" 39 860 881
type(
  Var.t
)
"grammar_scope.ml" 41 883 889 "grammar_scope.ml" 41 883 897
type(
  (string, Var.t) Hashtbl.t * string Stack.t -> string -> Type.typ -> Var.t
)
ident(
  def add_push "grammar_scope.ml" 45 959 961 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 41 883 898 "grammar_scope.ml" 41 883 903
type(
  (string, Var.t) Hashtbl.t * string Stack.t
)
ident(
  def scope "grammar_scope.ml" 41 883 904 "grammar_scope.ml" 43 940 957
)
"grammar_scope.ml" 41 883 904 "grammar_scope.ml" 41 883 905
type(
  string
)
ident(
  def n "grammar_scope.ml" 41 883 906 "grammar_scope.ml" 43 940 957
)
"grammar_scope.ml" 41 883 906 "grammar_scope.ml" 41 883 907
type(
  Type.typ
)
ident(
  def t "grammar_scope.ml" 42 910 914 "grammar_scope.ml" 43 940 957
)
"grammar_scope.ml" 42 910 914 "grammar_scope.ml" 42 910 924
type(
  string -> string Stack.t -> unit
)
ident(
  ext_ref Stack.push
)
"grammar_scope.ml" 42 910 925 "grammar_scope.ml" 42 910 926
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 41 883 904 "grammar_scope.ml" 41 883 905
)
"grammar_scope.ml" 42 910 928 "grammar_scope.ml" 42 910 931
type(
  (string, Var.t) Hashtbl.t * string Stack.t -> string Stack.t
)
ident(
  ext_ref Pervasives.snd
)
"grammar_scope.ml" 42 910 932 "grammar_scope.ml" 42 910 937
type(
  (string, Var.t) Hashtbl.t * string Stack.t
)
ident(
  int_ref scope "grammar_scope.ml" 41 883 898 "grammar_scope.ml" 41 883 903
)
"grammar_scope.ml" 42 910 927 "grammar_scope.ml" 42 910 938
type(
  string Stack.t
)
"grammar_scope.ml" 42 910 914 "grammar_scope.ml" 42 910 938
call(
  stack
)
type(
  unit
)
"grammar_scope.ml" 43 940 944 "grammar_scope.ml" 43 940 947
type(
  (string, Var.t) Hashtbl.t * string Stack.t -> string -> Type.typ -> Var.t
)
ident(
  int_ref add "grammar_scope.ml" 37 797 803 "grammar_scope.ml" 37 797 806
)
"grammar_scope.ml" 43 940 948 "grammar_scope.ml" 43 940 953
type(
  (string, Var.t) Hashtbl.t * string Stack.t
)
ident(
  int_ref scope "grammar_scope.ml" 41 883 898 "grammar_scope.ml" 41 883 903
)
"grammar_scope.ml" 43 940 954 "grammar_scope.ml" 43 940 955
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 41 883 904 "grammar_scope.ml" 41 883 905
)
"grammar_scope.ml" 43 940 956 "grammar_scope.ml" 43 940 957
type(
  Type.typ
)
ident(
  int_ref t "grammar_scope.ml" 41 883 906 "grammar_scope.ml" 41 883 907
)
"grammar_scope.ml" 43 940 944 "grammar_scope.ml" 43 940 957
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 42 910 914 "grammar_scope.ml" 43 940 957
type(
  Var.t
)
"grammar_scope.ml" 45 959 965 "grammar_scope.ml" 45 959 968
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t -> unit
)
ident(
  def pop "grammar_scope.ml" 51 1111 1113 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 45 959 969 "grammar_scope.ml" 45 959 974
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t
)
ident(
  def scope "grammar_scope.ml" 46 977 981 "grammar_scope.ml" 48 1029 1051
)
"grammar_scope.ml" 46 977 986 "grammar_scope.ml" 46 977 987
type(
  ('f, 'g) Hashtbl.t
)
"grammar_scope.ml" 46 977 988 "grammar_scope.ml" 46 977 989
type(
  'f Stack.t
)
"grammar_scope.ml" 46 977 985 "grammar_scope.ml" 46 977 990
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t
)
"grammar_scope.ml" 46 977 993 "grammar_scope.ml" 46 977 998
type(
  ('f, 'g) Hashtbl.t * 'f Stack.t
)
ident(
  int_ref scope "grammar_scope.ml" 45 959 969 "grammar_scope.ml" 45 959 974
)
"grammar_scope.ml" 47 1002 1010 "grammar_scope.ml" 47 1002 1011
type(
  'f
)
"grammar_scope.ml" 47 1002 1014 "grammar_scope.ml" 47 1002 1023
type(
  'f Stack.t -> 'f
)
ident(
  ext_ref Stack.pop
)
"grammar_scope.ml" 47 1002 1024 "grammar_scope.ml" 47 1002 1025
type(
  'f Stack.t
)
ident(
  int_ref s "grammar_scope.ml" 46 977 988 "grammar_scope.ml" 46 977 989
)
"grammar_scope.ml" 47 1002 1014 "grammar_scope.ml" 47 1002 1025
call(
  stack
)
type(
  'f
)
"grammar_scope.ml" 48 1029 1033 "grammar_scope.ml" 48 1029 1047
type(
  ('f, 'g) Hashtbl.t -> 'f -> unit
)
ident(
  ext_ref Hashtbl.remove
)
"grammar_scope.ml" 48 1029 1048 "grammar_scope.ml" 48 1029 1049
type(
  ('f, 'g) Hashtbl.t
)
ident(
  int_ref h "grammar_scope.ml" 46 977 986 "grammar_scope.ml" 46 977 987
)
"grammar_scope.ml" 48 1029 1050 "grammar_scope.ml" 48 1029 1051
type(
  'f
)
ident(
  int_ref n "grammar_scope.ml" 47 1002 1010 "grammar_scope.ml" 47 1002 1011
)
"grammar_scope.ml" 48 1029 1033 "grammar_scope.ml" 48 1029 1051
call(
  tail
)
type(
  unit
)
"grammar_scope.ml" 47 1002 1006 "grammar_scope.ml" 48 1029 1051
type(
  unit
)
"grammar_scope.ml" 46 977 981 "grammar_scope.ml" 48 1029 1051
type(
  unit
)
"grammar_scope.ml" 51 1111 1117 "grammar_scope.ml" 51 1111 1136
type(
  (string, Var.t) Hashtbl.t * 'h -> string -> Type.typ option -> Var.t
)
ident(
  def get_lval_if_defined "grammar_scope.ml" 58 1404 1406 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 51 1111 1137 "grammar_scope.ml" 51 1111 1142
type(
  (string, Var.t) Hashtbl.t * 'h
)
ident(
  def scope "grammar_scope.ml" 51 1111 1143 "grammar_scope.ml" 56 1267 1402
)
"grammar_scope.ml" 51 1111 1143 "grammar_scope.ml" 51 1111 1144
type(
  string
)
ident(
  def n "grammar_scope.ml" 51 1111 1145 "grammar_scope.ml" 56 1267 1402
)
"grammar_scope.ml" 51 1111 1145 "grammar_scope.ml" 51 1111 1146
type(
  Type.typ option
)
ident(
  def t "grammar_scope.ml" 52 1149 1153 "grammar_scope.ml" 56 1267 1402
)
"grammar_scope.ml" 52 1149 1157 "grammar_scope.ml" 52 1149 1158
type(
  string
)
"grammar_scope.ml" 52 1149 1161 "grammar_scope.ml" 52 1149 1169
type(
  string -> string
)
ident(
  int_ref stripnum "grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
)
"grammar_scope.ml" 52 1149 1170 "grammar_scope.ml" 52 1149 1171
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 51 1111 1143 "grammar_scope.ml" 51 1111 1144
)
"grammar_scope.ml" 52 1149 1161 "grammar_scope.ml" 52 1149 1171
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 53 1175 1183 "grammar_scope.ml" 53 1175 1184
type(
  Var.t
)
"grammar_scope.ml" 53 1175 1187 "grammar_scope.ml" 53 1175 1199
type(
  (string, Var.t) Hashtbl.t -> string -> Var.t
)
ident(
  ext_ref Hashtbl.find
)
"grammar_scope.ml" 53 1175 1201 "grammar_scope.ml" 53 1175 1204
type(
  (string, Var.t) Hashtbl.t * 'h -> (string, Var.t) Hashtbl.t
)
ident(
  ext_ref Pervasives.fst
)
"grammar_scope.ml" 53 1175 1205 "grammar_scope.ml" 53 1175 1210
type(
  (string, Var.t) Hashtbl.t * 'h
)
ident(
  int_ref scope "grammar_scope.ml" 51 1111 1137 "grammar_scope.ml" 51 1111 1142
)
"grammar_scope.ml" 53 1175 1200 "grammar_scope.ml" 53 1175 1211
type(
  (string, Var.t) Hashtbl.t
)
"grammar_scope.ml" 53 1175 1212 "grammar_scope.ml" 53 1175 1213
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 52 1149 1157 "grammar_scope.ml" 52 1149 1158
)
"grammar_scope.ml" 53 1175 1187 "grammar_scope.ml" 53 1175 1213
call(
  stack
)
type(
  Var.t
)
"grammar_scope.ml" 54 1217 1224 "grammar_scope.ml" 54 1217 1225
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 51 1111 1145 "grammar_scope.ml" 51 1111 1146
)
"grammar_scope.ml" 54 1217 1226 "grammar_scope.ml" 54 1217 1227
type(
  Type.typ option -> Type.typ option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"grammar_scope.ml" 54 1217 1228 "grammar_scope.ml" 54 1217 1232
type(
  Type.typ option
)
"grammar_scope.ml" 54 1217 1224 "grammar_scope.ml" 54 1217 1232
type(
  bool
)
"grammar_scope.ml" 54 1217 1233 "grammar_scope.ml" 54 1217 1235
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"grammar_scope.ml" 54 1217 1236 "grammar_scope.ml" 54 1217 1237
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 51 1111 1145 "grammar_scope.ml" 51 1111 1146
)
"grammar_scope.ml" 54 1217 1238 "grammar_scope.ml" 54 1217 1239
type(
  Type.typ option -> Type.typ option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"grammar_scope.ml" 54 1217 1245 "grammar_scope.ml" 54 1217 1252
type(
  Var.t -> Type.typ
)
ident(
  ext_ref Var.typ
)
"grammar_scope.ml" 54 1217 1253 "grammar_scope.ml" 54 1217 1254
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 53 1175 1183 "grammar_scope.ml" 53 1175 1184
)
"grammar_scope.ml" 54 1217 1244 "grammar_scope.ml" 54 1217 1255
call(
  stack
)
type(
  Type.typ
)
"grammar_scope.ml" 54 1217 1240 "grammar_scope.ml" 54 1217 1255
type(
  Type.typ option
)
"grammar_scope.ml" 54 1217 1236 "grammar_scope.ml" 54 1217 1255
type(
  bool
)
"grammar_scope.ml" 54 1217 1224 "grammar_scope.ml" 54 1217 1255
type(
  bool
)
"grammar_scope.ml" 55 1256 1265 "grammar_scope.ml" 55 1256 1266
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 53 1175 1183 "grammar_scope.ml" 53 1175 1184
)
"grammar_scope.ml" 56 1267 1276 "grammar_scope.ml" 56 1267 1279
type(
  string -> Var.t
)
ident(
  int_ref err "grammar_scope.ml" 18 381 385 "grammar_scope.ml" 18 381 388
)
"grammar_scope.ml" 56 1267 1281 "grammar_scope.ml" 56 1267 1293
type(
  string
)
"grammar_scope.ml" 56 1267 1293 "grammar_scope.ml" 56 1267 1294
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 56 1267 1294 "grammar_scope.ml" 56 1267 1295
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 52 1149 1157 "grammar_scope.ml" 52 1149 1158
)
"grammar_scope.ml" 56 1267 1295 "grammar_scope.ml" 56 1267 1296
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 56 1267 1296 "grammar_scope.ml" 56 1267 1329
type(
  string
)
"grammar_scope.ml" 56 1267 1329 "grammar_scope.ml" 56 1267 1330
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 56 1267 1331 "grammar_scope.ml" 56 1267 1347
type(
  Type.typ -> string
)
ident(
  ext_ref Pp.typ_to_string
)
"grammar_scope.ml" 56 1267 1349 "grammar_scope.ml" 56 1267 1356
type(
  Var.t -> Type.typ
)
ident(
  ext_ref Var.typ
)
"grammar_scope.ml" 56 1267 1357 "grammar_scope.ml" 56 1267 1358
type(
  Var.t
)
ident(
  int_ref v "grammar_scope.ml" 53 1175 1183 "grammar_scope.ml" 53 1175 1184
)
"grammar_scope.ml" 56 1267 1348 "grammar_scope.ml" 56 1267 1359
call(
  stack
)
type(
  Type.typ
)
"grammar_scope.ml" 56 1267 1330 "grammar_scope.ml" 56 1267 1360
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1360 "grammar_scope.ml" 56 1267 1361
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 56 1267 1361 "grammar_scope.ml" 56 1267 1364
type(
  string
)
"grammar_scope.ml" 56 1267 1364 "grammar_scope.ml" 56 1267 1365
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 56 1267 1366 "grammar_scope.ml" 56 1267 1382
type(
  Type.typ -> string
)
ident(
  ext_ref Pp.typ_to_string
)
"grammar_scope.ml" 56 1267 1384 "grammar_scope.ml" 56 1267 1397
type(
  Type.typ option -> Type.typ
)
ident(
  ext_ref BatOption.get
)
"grammar_scope.ml" 56 1267 1398 "grammar_scope.ml" 56 1267 1399
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 51 1111 1145 "grammar_scope.ml" 51 1111 1146
)
"grammar_scope.ml" 56 1267 1383 "grammar_scope.ml" 56 1267 1400
call(
  stack
)
type(
  Type.typ
)
"grammar_scope.ml" 56 1267 1365 "grammar_scope.ml" 56 1267 1401
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1361 "grammar_scope.ml" 56 1267 1401
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1330 "grammar_scope.ml" 56 1267 1401
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1296 "grammar_scope.ml" 56 1267 1401
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1294 "grammar_scope.ml" 56 1267 1401
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1280 "grammar_scope.ml" 56 1267 1402
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 56 1267 1276 "grammar_scope.ml" 56 1267 1402
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 54 1217 1221 "grammar_scope.ml" 56 1267 1402
type(
  Var.t
)
"grammar_scope.ml" 53 1175 1179 "grammar_scope.ml" 56 1267 1402
type(
  Var.t
)
"grammar_scope.ml" 52 1149 1153 "grammar_scope.ml" 56 1267 1402
type(
  Var.t
)
"grammar_scope.ml" 58 1404 1410 "grammar_scope.ml" 58 1404 1418
type(
  (string, Var.t) Hashtbl.t * 'i -> string -> Type.typ option -> Var.t
)
ident(
  def get_lval "grammar_scope.ml" 65 1574 1633 "grammar_scope.ml" 67 1635 1638
)
"grammar_scope.ml" 58 1404 1419 "grammar_scope.ml" 58 1404 1424
type(
  (string, Var.t) Hashtbl.t * 'i
)
ident(
  def scope "grammar_scope.ml" 58 1404 1425 "grammar_scope.ml" 65 1574 1633
)
"grammar_scope.ml" 58 1404 1425 "grammar_scope.ml" 58 1404 1426
type(
  string
)
ident(
  def n "grammar_scope.ml" 58 1404 1427 "grammar_scope.ml" 65 1574 1633
)
"grammar_scope.ml" 58 1404 1427 "grammar_scope.ml" 58 1404 1428
type(
  Type.typ option
)
ident(
  def t "grammar_scope.ml" 59 1431 1435 "grammar_scope.ml" 65 1574 1633
)
"grammar_scope.ml" 59 1431 1439 "grammar_scope.ml" 59 1431 1440
type(
  string
)
"grammar_scope.ml" 59 1431 1443 "grammar_scope.ml" 59 1431 1451
type(
  string -> string
)
ident(
  int_ref stripnum "grammar_scope.ml" 10 229 233 "grammar_scope.ml" 10 229 241
)
"grammar_scope.ml" 59 1431 1452 "grammar_scope.ml" 59 1431 1453
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 58 1404 1425 "grammar_scope.ml" 58 1404 1426
)
"grammar_scope.ml" 59 1431 1443 "grammar_scope.ml" 59 1431 1453
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 61 1465 1471 "grammar_scope.ml" 61 1465 1490
type(
  (string, Var.t) Hashtbl.t * 'i -> string -> Type.typ option -> Var.t
)
ident(
  int_ref get_lval_if_defined "grammar_scope.ml" 51 1111 1117 "grammar_scope.ml" 51 1111 1136
)
"grammar_scope.ml" 61 1465 1491 "grammar_scope.ml" 61 1465 1496
type(
  (string, Var.t) Hashtbl.t * 'i
)
ident(
  int_ref scope "grammar_scope.ml" 58 1404 1419 "grammar_scope.ml" 58 1404 1424
)
"grammar_scope.ml" 61 1465 1497 "grammar_scope.ml" 61 1465 1498
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 59 1431 1439 "grammar_scope.ml" 59 1431 1440
)
"grammar_scope.ml" 61 1465 1499 "grammar_scope.ml" 61 1465 1500
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 58 1404 1427 "grammar_scope.ml" 58 1404 1428
)
"grammar_scope.ml" 61 1465 1471 "grammar_scope.ml" 61 1465 1500
call(
  stack
)
type(
  Var.t
)
"grammar_scope.ml" 62 1501 1510 "grammar_scope.ml" 62 1501 1519
type(
  exn
)
"grammar_scope.ml" 63 1523 1535 "grammar_scope.ml" 63 1523 1536
type(
  Type.typ option
)
ident(
  int_ref t "grammar_scope.ml" 58 1404 1427 "grammar_scope.ml" 58 1404 1428
)
"grammar_scope.ml" 64 1542 1555 "grammar_scope.ml" 64 1542 1556
type(
  Type.typ
)
ident(
  def t "grammar_scope.ml" 64 1542 1560 "grammar_scope.ml" 64 1542 1573
)
"grammar_scope.ml" 64 1542 1550 "grammar_scope.ml" 64 1542 1556
type(
  Type.typ option
)
"grammar_scope.ml" 64 1542 1560 "grammar_scope.ml" 64 1542 1563
type(
  (string, Var.t) Hashtbl.t * 'i -> string -> Type.typ -> Var.t
)
ident(
  int_ref add "grammar_scope.ml" 37 797 803 "grammar_scope.ml" 37 797 806
)
"grammar_scope.ml" 64 1542 1564 "grammar_scope.ml" 64 1542 1569
type(
  (string, Var.t) Hashtbl.t * 'i
)
ident(
  int_ref scope "grammar_scope.ml" 58 1404 1419 "grammar_scope.ml" 58 1404 1424
)
"grammar_scope.ml" 64 1542 1570 "grammar_scope.ml" 64 1542 1571
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 59 1431 1439 "grammar_scope.ml" 59 1431 1440
)
"grammar_scope.ml" 64 1542 1572 "grammar_scope.ml" 64 1542 1573
type(
  Type.typ
)
ident(
  int_ref t "grammar_scope.ml" 64 1542 1555 "grammar_scope.ml" 64 1542 1556
)
"grammar_scope.ml" 64 1542 1560 "grammar_scope.ml" 64 1542 1573
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 65 1574 1582 "grammar_scope.ml" 65 1574 1586
type(
  Type.typ option
)
"grammar_scope.ml" 65 1574 1590 "grammar_scope.ml" 65 1574 1593
type(
  string -> Var.t
)
ident(
  int_ref err "grammar_scope.ml" 18 381 385 "grammar_scope.ml" 18 381 388
)
"grammar_scope.ml" 65 1574 1595 "grammar_scope.ml" 65 1574 1626
type(
  string
)
"grammar_scope.ml" 65 1574 1626 "grammar_scope.ml" 65 1574 1627
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 65 1574 1627 "grammar_scope.ml" 65 1574 1628
type(
  string
)
ident(
  int_ref n "grammar_scope.ml" 59 1431 1439 "grammar_scope.ml" 59 1431 1440
)
"grammar_scope.ml" 65 1574 1628 "grammar_scope.ml" 65 1574 1629
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"grammar_scope.ml" 65 1574 1629 "grammar_scope.ml" 65 1574 1632
type(
  string
)
"grammar_scope.ml" 65 1574 1627 "grammar_scope.ml" 65 1574 1632
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 65 1574 1594 "grammar_scope.ml" 65 1574 1633
call(
  stack
)
type(
  string
)
"grammar_scope.ml" 65 1574 1590 "grammar_scope.ml" 65 1574 1633
call(
  tail
)
type(
  Var.t
)
"grammar_scope.ml" 63 1523 1529 "grammar_scope.ml" 65 1574 1633
type(
  Var.t
)
"grammar_scope.ml" 60 1457 1461 "grammar_scope.ml" 65 1574 1633
type(
  Var.t
)
"grammar_scope.ml" 59 1431 1435 "grammar_scope.ml" 65 1574 1633
type(
  Var.t
)
"grammar_scope.ml" 69 1640 1644 "grammar_scope.ml" 69 1640 1655
type(
  unit -> Scope.t
)
ident(
  def empty_scope "grammar_scope.ml" 70 1676 1676 --
)
"grammar_scope.ml" 69 1640 1658 "grammar_scope.ml" 69 1640 1675
type(
  unit -> Scope.t
)
ident(
  ext_ref Scope.empty_scope
)
"grammar_scope.ml" 70 1676 1680 "grammar_scope.ml" 70 1676 1703
type(
  Var.t list -> (string, Var.t) Hashtbl.t * 'a Stack.t
)
ident(
  def create_scope_from_decls "grammar_scope.ml" 70 1676 1730 --
)
"grammar_scope.ml" 70 1676 1704 "grammar_scope.ml" 70 1676 1709
type(
  Var.t list
)
ident(
  def decls "grammar_scope.ml" 70 1676 1712 "grammar_scope.ml" 70 1676 1730
)
"grammar_scope.ml" 70 1676 1712 "grammar_scope.ml" 70 1676 1724
type(
  Var.t list -> (string, Var.t) Hashtbl.t * 'a Stack.t
)
ident(
  ext_ref Scope.create
)
"grammar_scope.ml" 70 1676 1725 "grammar_scope.ml" 70 1676 1730
type(
  Var.t list
)
ident(
  int_ref decls "grammar_scope.ml" 70 1676 1704 "grammar_scope.ml" 70 1676 1709
)
"grammar_scope.ml" 70 1676 1712 "grammar_scope.ml" 70 1676 1730
call(
  tail
)
type(
  (string, Var.t) Hashtbl.t * 'a Stack.t
)
