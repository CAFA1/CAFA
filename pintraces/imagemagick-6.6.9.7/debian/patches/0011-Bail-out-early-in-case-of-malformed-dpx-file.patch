Backport of:

From 68db5f601d4120170b91f5397e596c0b8f9d3a8e Mon Sep 17 00:00:00 2001
From: cristy <cristy@aa41f4f7-0bf4-0310-aa73-e5a19afd5a74>
Date: Fri, 28 Nov 2014 14:26:06 +0000
Subject: [PATCH] Bail out early in case of malformed dpx file

Avoid a SEGV.

git-svn-id: https://subversion.imagemagick.org/subversion/ImageMagick/branches/ImageMagick-6@17112 aa41f4f7-0bf4-0310-aa73-e5a19afd5a74
origin: http://trac.imagemagick.org/changeset/17112
---
 coders/dpx.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

Index: imagemagick-6.6.9.7/coders/dpx.c
===================================================================
--- imagemagick-6.6.9.7.orig/coders/dpx.c	2016-11-14 14:15:24.597856144 -0500
+++ imagemagick-6.6.9.7/coders/dpx.c	2016-11-14 14:15:24.593856144 -0500
@@ -64,6 +64,11 @@
 #include "magick/string-private.h"
 
 /*
+  Define declaration.
+*/
+#define MaxNumberImageElements  8
+
+/*
   Typedef declaration.
 */
 typedef enum
@@ -210,7 +215,7 @@
     lines_per_element;
 
   DPXImageElement
-    image_element[8];
+    image_element[MaxNumberImageElements];
 
   unsigned char
     reserve[52];
@@ -670,6 +675,8 @@
     Read DPX image header.
   */
   dpx.image.orientation=ReadBlobShort(image);
+  if (dpx.image.orientation > 7)
+    ThrowReaderException(CorruptImageError,"ImproperImageHeader");
   offset+=2;
   if (dpx.image.orientation != (unsigned short) (~0U))
     (void) FormatImageProperty(image,"dpx:image.orientation","%d",
@@ -687,7 +694,7 @@
     case 7: image->orientation=RightBottomOrientation; break;
   }
   dpx.image.number_elements=ReadBlobShort(image);
-  if (dpx.image.number_elements > 8)
+  if (dpx.image.number_elements > MaxNumberImageElements)
     ThrowReaderException(CorruptImageError,"ImproperImageHeader");
   offset+=2;
   dpx.image.pixels_per_line=ReadBlobLong(image);
