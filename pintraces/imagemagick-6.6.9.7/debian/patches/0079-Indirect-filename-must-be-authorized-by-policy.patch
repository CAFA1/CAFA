Description: Indirect filename must be authorized by policy
Origin: backport, https://github.com/ImageMagick/ImageMagick/commit/89ce096de81428c1b15b44ec97eb5a7c7d4e0f8b, https://github.com/ImageMagick/ImageMagick/commit/58a2ce1638c7cca4db9c9a70ea841b34c8932490
Bug: https://www.imagemagick.org/discourse-server/viewtopic.php?f=4&t=29588
Bug-CVE: CVE-2016-3714
Bug-Debian: https://bugs.debian.org/823542
Last-Update: 2016-06-01
---
Index: imagemagick-6.6.9.7/magick/property.c
===================================================================
--- imagemagick-6.6.9.7.orig/magick/property.c	2016-06-01 13:45:54.053915210 -0400
+++ imagemagick-6.6.9.7/magick/property.c	2016-06-01 13:46:13.902182751 -0400
@@ -64,6 +64,7 @@
 #include "magick/monitor.h"
 #include "magick/montage.h"
 #include "magick/option.h"
+#include "magick/policy.h"
 #include "magick/profile.h"
 #include "magick/property.h"
 #include "magick/quantum.h"
@@ -2585,8 +2586,7 @@
 {
   char
     filename[MaxTextExtent],
-    *interpret_text,
-    *text;
+    *interpret_text;
 
   const char
     *value;
@@ -2608,18 +2608,36 @@
   assert(image->signature == MagickSignature);
   if (image->debug != MagickFalse)
     (void) LogMagickEvent(TraceEvent,GetMagickModule(),"%s",image->filename);
+
   if ((embed_text == (const char *) NULL) || (*embed_text == '\0'))
-    return((char *) NULL);
-  text=(char *) embed_text;
-  if ((*text == '@') && ((*(text+1) == '-') ||
-      (IsPathAccessible(text+1) != MagickFalse)))
-    return(FileToString(embed_text+1,~0,&image->exception));
+    return(ConstantString(""));
+  p=embed_text;
+
+  while ((isspace((int) ((unsigned char) *p)) != 0) && (*p != '\0'))
+    p++;
+  if (*p == '\0')
+    return(ConstantString(""));
+
+  if ((*p == '@') && (IsPathAccessible(p+1) != MagickFalse))
+    {
+      /* handle a '@' replace string from file */
+      if (IsRightsAuthorized(PathPolicyDomain,ReadPolicyRights,p) == MagickFalse)
+        {
+          errno=EPERM;
+          (void) ThrowMagickException(&image->exception,GetMagickModule(),
+            PolicyError,"NotAuthorized","`%s'",p);
+          return(ConstantString(""));
+        }
+      interpret_text=FileToString(p+1,~0UL,&image->exception);
+      if (interpret_text != (char *) NULL)
+        return(interpret_text);
+    }
+
   /*
     Translate any embedded format characters.
   */
-  interpret_text=AcquireString(text);
+  interpret_text=AcquireString(embed_text);
   extent=MaxTextExtent;
-  p=text;
   for (q=interpret_text; *p != '\0'; p++)
   {
     *q='\0';
@@ -3185,8 +3203,6 @@
     }
   }
   *q='\0';
-  if (text != (const char *) embed_text)
-    text=DestroyString(text);
   (void) SubstituteString(&interpret_text,"&lt;","<");
   (void) SubstituteString(&interpret_text,"&gt;",">");
   return(interpret_text);
