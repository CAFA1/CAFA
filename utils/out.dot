digraph G {
  node [shape=box, style=filled, fillcolor="#F5F5F5"];
  BB_Entry [label="BB_Entry\n/*entry node*/ "];
  BB_Exit [label="BB_Exit\n/*exit node*/ "];
  BB_0 [label="BB_0\naddr 0x0 @asm \"add    %eax,%ebx\"\nlabel pc_0x0\nT_t1:u32 = R_EBX_32:u32\nT_t2:u32 = R_EAX_32:u32\nR_EBX_32_120:u32 = R_EBX_32:u32 + T_t2:u32\nR_CF:bool = R_EBX_32_120:u32 < T_t1:u32\nT_temp:u32 = ~T_t2:u32\nT_temp_141:u32 = T_t1:u32 ^ T_temp:u32\nT_temp_142:u32 = T_t1:u32 ^ R_EBX_32_120:u32\nT_temp_143:u32 = T_temp_141:u32 & T_temp_142:u32\nR_OF:bool = high:bool(T_temp_143:u32)\nT_temp_144:u32 = R_EBX_32_120:u32 ^ T_t1:u32\nT_temp_145:u32 = T_temp_144:u32 ^ T_t2:u32\nT_temp_146:u32 = 0x10:u32 & T_temp_145:u32\nR_AF:bool = 0x10:u32 == T_temp_146:u32\nT_temp_147:u32 = R_EBX_32_120:u32 >> 4:u32\nT_acc:u32 = T_temp_147:u32 ^ R_EBX_32_120:u32\nT_temp_148:u32 = T_acc:u32 >> 2:u32\nT_acc_125:u32 = T_temp_148:u32 ^ T_acc:u32\nT_temp_149:u32 = T_acc_125:u32 >> 1:u32\nT_temp_150:u32 = T_temp_149:u32 ^ T_acc_125:u32\nT_temp_151:bool = low:bool(T_temp_150:u32)\nR_PF:bool = ~T_temp_151:bool\nR_SF:bool = high:bool(R_EBX_32_120:u32)\nR_ZF:bool = 0:u32 == R_EBX_32_120:u32\n"];
  BB_1 [label="BB_1\naddr 0x2 @asm \"shl    %cl,%ebx\"\nlabel pc_0x2\nT_origDEST:u32 = R_EBX_32_120:u32\nT_origCOUNT:u32 = R_ECX_32:u32 & 0x1f:u32\nT_temp_152:u32 = R_ECX_32:u32 & 0x1f:u32\nR_EBX_32_131:u32 = R_EBX_32_120:u32 << T_temp_152:u32\nT_temp_153:bool = T_origCOUNT:u32 == 0:u32\nT_temp_154:u32 = 0x20:u32 - T_origCOUNT:u32\nT_temp_155:u32 = T_origDEST:u32 >> T_temp_154:u32\nT_temp_156:bool = low:bool(T_temp_155:u32)\nR_CF_132:bool = if T_temp_153:bool then R_CF:bool else T_temp_156:bool\nT_temp_157:bool = T_origCOUNT:u32 == 0:u32\nT_temp_158:bool = T_origCOUNT:u32 == 1:u32\nT_temp_159:bool = high:bool(R_EBX_32_131:u32)\nT_temp_160:bool = T_temp_159:bool ^ R_CF_132:bool\nT_temp_161:bool = unknown \"OF undefined after shift\":bool\nT_temp_162:bool =\n  if T_temp_158:bool then T_temp_160:bool else T_temp_161:bool\nR_OF_133:bool = if T_temp_157:bool then R_OF:bool else T_temp_162:bool\nT_temp_163:bool = T_origCOUNT:u32 == 0:u32\nT_temp_164:bool = high:bool(R_EBX_32_131:u32)\nR_SF_134:bool = if T_temp_163:bool then R_SF:bool else T_temp_164:bool\nT_temp_165:bool = T_origCOUNT:u32 == 0:u32\nT_temp_166:bool = 0:u32 == R_EBX_32_131:u32\nR_ZF_135:bool = if T_temp_165:bool then R_ZF:bool else T_temp_166:bool\nT_temp_167:u32 = R_EBX_32_131:u32 >> 4:u32\nT_acc_113:u32 = T_temp_167:u32 ^ R_EBX_32_131:u32\nT_temp_168:u32 = T_acc_113:u32 >> 2:u32\nT_acc_113_137:u32 = T_temp_168:u32 ^ T_acc_113:u32\nT_temp_169:bool = T_origCOUNT:u32 == 0:u32\nT_temp_170:u32 = T_acc_113_137:u32 >> 1:u32\nT_temp_171:u32 = T_temp_170:u32 ^ T_acc_113_137:u32\nT_temp_172:bool = low:bool(T_temp_171:u32)\nT_temp_173:bool = ~T_temp_172:bool\nR_PF_138:bool = if T_temp_169:bool then R_PF:bool else T_temp_173:bool\nT_temp_174:bool = T_origCOUNT:u32 == 0:u32\nT_temp_175:bool = unknown \"AF undefined after shift\":bool\nR_AF_139:bool = if T_temp_174:bool then R_AF:bool else T_temp_175:bool\n"];
  BB_2 [label="BB_2\naddr 0x4 @asm \"jb     0x0000000000000008\"\nlabel pc_0x4\ncjmp R_CF_132:bool, 8:u32, \"nocjmp0\"\n"];
  BB_3 [label="BB_3\nlabel nocjmp0\naddr 0x6 @asm \"jmp    0x0000000000000009\"\nlabel pc_0x6\njmp 9:u32\n"];
  BB_4 [label="BB_4\naddr 0x8 @asm \"nop\" label pc_0x8 addr 0x9 @asm \"nop\" label pc_0x9 "];
  
  
  edge [color="#0000FF"];
  BB_Entry -> BB_0 [label=""];
  BB_0 -> BB_1 [label=""];
  BB_1 -> BB_2 [label=""];
  BB_2 -> BB_3 [label="R_CF_132:bool == false", color="#FF0000"];
  BB_2 -> BB_4 [label="R_CF_132:bool == true", color="#00FF00"];
  BB_3 -> BB_4 [label=""];
  BB_4 -> BB_Exit [label=""];
  
  }